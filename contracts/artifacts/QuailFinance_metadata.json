{
	"compiler": {
		"version": "0.8.24+commit.e11b9ed9"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_entropy",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_entropyProvider",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "InvalidInitialization",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "NotInitializing",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "OwnableInvalidOwner",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "OwnableUnauthorizedAccount",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint64",
						"name": "version",
						"type": "uint64"
					}
				],
				"name": "Initialized",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "potId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "participant",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "rotationCycleInSeconds",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_interestDenominator",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_interestNumerator",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_numParticipants",
						"type": "uint256"
					}
				],
				"name": "ParticipantJoined",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "potId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "creator",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "rotationCycleInSeconds",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_interestDenominator",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_interestNumerator",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_numParticipants",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint64",
						"name": "sequenceNumber",
						"type": "uint64"
					}
				],
				"name": "PotCreated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "potId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "winner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "round",
						"type": "uint256"
					}
				],
				"name": "RotationCompleted",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "BLAST",
				"outputs": [
					{
						"internalType": "contract IBlast",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "USDB",
				"outputs": [
					{
						"internalType": "contract IERC20Rebasing",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_potId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "calculateRiskPoolBalance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "claimAllYield",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "claimAmount",
						"type": "uint256"
					},
					{
						"internalType": "bytes32[]",
						"name": "merkleProof",
						"type": "bytes32[]"
					}
				],
				"name": "claimFunds",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "claimMyContractsGas",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_potId",
						"type": "uint256"
					}
				],
				"name": "claimReward",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_name",
						"type": "string"
					},
					{
						"internalType": "bytes32",
						"name": "userCommitment",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "_rotationCycleInSeconds",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_interestDenominator",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_interestNumerator",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_numParticipants",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "createPot",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "hasClaimed",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "initialize",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_potId",
						"type": "uint256"
					}
				],
				"name": "joinPot",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "merkleRoot",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "pots",
				"outputs": [
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "riskPoolBalance",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "rotationCycleInSeconds",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "lastRotationTime",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "interestNumerator",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "interestDenominator",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "numParticipants",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "currentRound",
						"type": "uint256"
					},
					{
						"internalType": "uint64",
						"name": "sequenceNumber",
						"type": "uint64"
					},
					{
						"internalType": "address",
						"name": "potCreator",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_potId",
						"type": "uint256"
					},
					{
						"internalType": "bytes32",
						"name": "userRandom",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "providerRandom",
						"type": "bytes32"
					}
				],
				"name": "rotateLiquidity",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_merkleRoot",
						"type": "bytes32"
					}
				],
				"name": "setMerkleRoot",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalRevenue",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "usdbToken",
				"outputs": [
					{
						"internalType": "contract IERC20",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdrawRevenue",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"errors": {
				"InvalidInitialization()": [
					{
						"details": "The contract is already initialized."
					}
				],
				"NotInitializing()": [
					{
						"details": "The contract is not initializing."
					}
				],
				"OwnableInvalidOwner(address)": [
					{
						"details": "The owner is not a valid owner account. (eg. `address(0)`)"
					}
				],
				"OwnableUnauthorizedAccount(address)": [
					{
						"details": "The caller account is not authorized to perform an operation."
					}
				]
			},
			"events": {
				"Initialized(uint64)": {
					"details": "Triggered when the contract has been initialized or reinitialized."
				}
			},
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/QuailFinance.sol": "QuailFinance"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
			"keccak256": "0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a",
			"license": "MIT",
			"urls": [
				"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6",
				"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2"
			]
		},
		"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
			"keccak256": "0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b",
			"license": "MIT",
			"urls": [
				"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609",
				"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"
			]
		},
		"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
			"keccak256": "0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397",
			"license": "MIT",
			"urls": [
				"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9",
				"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
			"license": "MIT",
			"urls": [
				"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
				"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
			]
		},
		"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol": {
			"keccak256": "0x6400c4bee15052e043e5d10315135972529bd1c8012f43da494dc6b4f4661058",
			"license": "MIT",
			"urls": [
				"bzz-raw://da5d3d47d35af4373743a559ea4b9b7ecfe4bab6f0703f410c1e59959b7966ac",
				"dweb:/ipfs/QmTHdoghh4WLu4yURjGEgRk162pcwwdsG52MPGa12GqnGR"
			]
		},
		"@pythnetwork/entropy-sdk-solidity/EntropyEvents.sol": {
			"keccak256": "0xded0aaeffb359531dffccea98ef0b3fa7c47999926b47618342e48b168fd7ea9",
			"license": "Apache-2.0",
			"urls": [
				"bzz-raw://18fc6f97a88dbd26fa8c550823ae5a74dadae72213f38859246b3c27bc14293b",
				"dweb:/ipfs/QmXsLYWVeM9UQDMsob3Q51PxK9jP99fruJW2S1uFUt21w6"
			]
		},
		"@pythnetwork/entropy-sdk-solidity/EntropyStructs.sol": {
			"keccak256": "0x61ef31ee296e6c4404c334ba09953db0d195bb93bbddefcc6ded3a6c700b22f3",
			"license": "Apache 2",
			"urls": [
				"bzz-raw://31898e1d9ff38cb1cbea1457eea455596a64ab6546cc2075ef26f53078db6791",
				"dweb:/ipfs/QmPtVDTYSJUmUMCoC9GPoEHAXJvdkbjsHu2eQNp6DNcT3z"
			]
		},
		"@pythnetwork/entropy-sdk-solidity/IEntropy.sol": {
			"keccak256": "0x23ea0ee3b8b50e00d7edadb4e5b7877165518cd822b453d1cb48e21b777bb612",
			"license": "Apache 2",
			"urls": [
				"bzz-raw://6405d20218c21a8c3a7f7cf985573a32378cb90f8329726040865aa2fd508185",
				"dweb:/ipfs/QmZDw9Wv3PwWkm5obHNrS45CgDCyHkCi7eqX29qryeWcu9"
			]
		},
		"contracts/IBlast.sol": {
			"keccak256": "0x55ca30a5c12bd255a306b9342e7e101ce0c88d62679318372771b8cb0b7ce733",
			"license": "MIT",
			"urls": [
				"bzz-raw://df42814393047e060e4188a8736131ff4cac706080d04e207809a810b73bbc80",
				"dweb:/ipfs/QmZxXg2RDc8qopt354UD7qVTKBwYtt7cFJ1tpqJNyxpK1Q"
			]
		},
		"contracts/IBlastPoints.sol": {
			"keccak256": "0xb39cc4f8d44b519407f1176b4bf37351c78828046287f8702a118aa0f097fecb",
			"license": "MIT",
			"urls": [
				"bzz-raw://b604a8f941e1d868736776fb40db3a619e28c8f7890376582c2e09fd5cb44f17",
				"dweb:/ipfs/QmT5C6WKNyCwkSUKAScmD6cRyqoQTmPe95wbxUBuwDntko"
			]
		},
		"contracts/IERC20Rebasing.sol": {
			"keccak256": "0xd7456daba0e57d0561815401c9f24a2fcf8b4daa471c16055c92af915aaaf33f",
			"license": "MIT",
			"urls": [
				"bzz-raw://43cbe83d82e6c965beb79df69c3154803aa59f6b71c326697e408d7884dc46e4",
				"dweb:/ipfs/QmTYC1k7XZ5XftKRXk8ZHVvpACxUbLh7CQVAa2tbdEKLvo"
			]
		},
		"contracts/QuailFinance.sol": {
			"keccak256": "0xd5b1bdf348c3a6ca5a9d9fb99e9e5c97609202b55edfa71f8397d90b1c112fee",
			"license": "MIT",
			"urls": [
				"bzz-raw://5486e52132e15d54d0e4fdecb1451a0aae65403c2b87e2ba3fed473793fd12f9",
				"dweb:/ipfs/QmTcsZRWWAv2DuAqJfAxUNQDy2fsUGnjPWPXoAsbJVNMQW"
			]
		}
	},
	"version": 1
}